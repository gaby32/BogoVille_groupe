{"map":"{\"version\":3,\"sources\":[\"/Users/kevinteasdaledube/PhpstormProjects/reactphp/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/kevinteasdaledube/PhpstormProjects/reactphp/src/logo.svg\",\"/Users/kevinteasdaledube/PhpstormProjects/reactphp/src/KillerApp.js\",\"/Users/kevinteasdaledube/PhpstormProjects/reactphp/src/App.js\",\"/Users/kevinteasdaledube/PhpstormProjects/reactphp/src/serviceWorker.js\",\"/Users/kevinteasdaledube/PhpstormProjects/reactphp/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"KillerApp\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"test\",\"path\",\"axios\",\"require\",\"data\",\"get\",\"toString\",\"then\",\"response\",\"console\",\"log\",\"setState\",\"bind\",\"catch\",\"error\",\"model\",\"react_default\",\"a\",\"createElement\",\"className\",\"src\",\"logo\",\"alt\",\"React\",\"Component\",\"App\",\"_React$Component\",\"inherits\",\"createClass\",\"key\",\"value\",\"onCharge\",\"_ref\",\"match\",\"KillerApp_KillerApp\",\"params\",\"react_router_dom\",\"to\",\"react_router\",\"children\",\"Child\",\"Boolean\",\"window\",\"location\",\"hostname\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\n\\nexport default class KillerApp extends React.Component {\\n    constructor(props){\\n        super(props);\\n        this.state = {\\n            test: props.path\\n        }\\n    }\\n\\n    componentWillMount() {\\n        //this.onCharge();\\n    }\\n\\n    onCharge(){\\n        const axios = require('axios');\\n        let data = \\\"\\\";\\n        axios.get('/' + this.state.test.toString())\\n            .then(function (response) {\\n                console.log(response.data);\\n                data = response.data.toString();\\n                this.setState({test: data});\\n            }.bind(this))\\n            .catch(function (error) {\\n                // handle error\\n                console.log(error);\\n            }).then(function () {\\n            // always executed\\n\\n        })\\n    }\\n\\n    changeText(model){\\n        const axios = require('axios');\\n        let data = \\\"\\\";\\n        axios.get('/'+ model.toString())\\n            .then(function (response) {\\n                console.log(response.data);\\n                data = response.data.toString();\\n                this.setState({test: data});\\n            }.bind(this))\\n            .catch(function (error) {\\n                // handle error\\n                console.log(error);\\n            }).then(function () {\\n            // always executed\\n\\n        })\\n    }\\n\\n\\n    render() {\\n        return (\\n            <div className=\\\"App\\\">\\n                <header className=\\\"App-header\\\">\\n                    <img src={logo} className=\\\"App-logo\\\" alt=\\\"logo\\\"/>{/*\\n                    <button onClick={() => this.changeText(\\\"probleme\\\")}>Probleme</button>\\n                    <button onClick={() => this.changeText(\\\"evenement\\\")}>Evenement</button>*/}\\n                    <p>{this.state.test}</p>\\n                </header>\\n            </div>\\n        );\\n    }\\n}\\n\",\"import React from 'react';\\nimport './App.css';\\nimport { BrowserRouter as Router, Route, Link } from \\\"react-router-dom\\\";\\nimport KillerApp from './KillerApp';\\n\\n\\nexport class App extends React.Component {\\n    constructor(props){\\n        super(props);\\n        this.state = {\\n            test: \\\"\\\"\\n        }\\n    }\\n\\n    componentWillMount() {\\n       this.onCharge();\\n    }\\n\\n    onCharge(){\\n      const axios = require('axios');\\n      let data = \\\"\\\";\\n      axios.get('/test')\\n          .then(function (response) {\\n              console.log(response.data);\\n              data = response.data.toString();\\n              this.setState({test: data});\\n          }.bind(this))\\n          .catch(function (error) {\\n              // handle error\\n              console.log(error);\\n          }).then(function () {\\n          // always executed\\n\\n      })\\n  }\\n\\n    Child({ match }) {\\n        return (\\n            <div>\\n                <KillerApp path={match.params.model}/>\\n            </div>\\n        );\\n    }\\n\\n\\n  render() {\\n    return (\\n        <Router>\\n            <div className=\\\"App\\\">\\n                <p>{this.state.test}</p>\\n                <ul>\\n                    <li>\\n                        <Link to=\\\"/evenement\\\">Evenement</Link>\\n                    </li>\\n                    <li>\\n                        <Link to=\\\"/probleme\\\">Probleme</Link>\\n                    </li>\\n                </ul>\\n\\n                <Route path=\\\"/:model\\\" children={this.Child}/>\\n\\n            </div>\\n        </Router>\\n\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{21:function(t,e,n){},29:function(t,e,n){t.exports=n.p+\"static/media/logo.5d5d9eef.svg\"},32:function(t,e,n){t.exports=n(65)},37:function(t,e,n){},65:function(t,e,n){\"use strict\";n.r(e);var a=n(0),o=n.n(a),c=n(28),l=n.n(c),i=(n(37),n(8)),r=n(9),s=n(11),u=n(10),h=n(12),m=(n(21),n(13)),d=n(6),f=n(29),g=n.n(f),p=function(t){function e(t){var n;return Object(i.a)(this,e),(n=Object(s.a)(this,Object(u.a)(e).call(this,t))).state={test:t.path},n}return Object(h.a)(e,t),Object(r.a)(e,[{key:\"componentWillMount\",value:function(){}},{key:\"onCharge\",value:function(){var t=n(14),e=\"\";t.get(\"/\"+this.state.test.toString()).then(function(t){console.log(t.data),e=t.data.toString(),this.setState({test:e})}.bind(this)).catch(function(t){console.log(t)}).then(function(){})}},{key:\"changeText\",value:function(t){var e=n(14),a=\"\";e.get(\"/\"+t.toString()).then(function(t){console.log(t.data),a=t.data.toString(),this.setState({test:a})}.bind(this)).catch(function(t){console.log(t)}).then(function(){})}},{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(\"header\",{className:\"App-header\"},o.a.createElement(\"img\",{src:g.a,className:\"App-logo\",alt:\"logo\"}),o.a.createElement(\"p\",null,this.state.test)))}}]),e}(o.a.Component),v=function(t){function e(t){var n;return Object(i.a)(this,e),(n=Object(s.a)(this,Object(u.a)(e).call(this,t))).state={test:\"\"},n}return Object(h.a)(e,t),Object(r.a)(e,[{key:\"componentWillMount\",value:function(){this.onCharge()}},{key:\"onCharge\",value:function(){var t=n(14),e=\"\";t.get(\"/test\").then(function(t){console.log(t.data),e=t.data.toString(),this.setState({test:e})}.bind(this)).catch(function(t){console.log(t)}).then(function(){})}},{key:\"Child\",value:function(t){var e=t.match;return o.a.createElement(\"div\",null,o.a.createElement(p,{path:e.params.model}))}},{key:\"render\",value:function(){return o.a.createElement(m.a,null,o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(\"p\",null,this.state.test),o.a.createElement(\"ul\",null,o.a.createElement(\"li\",null,o.a.createElement(m.b,{to:\"/evenement\"},\"Evenement\")),o.a.createElement(\"li\",null,o.a.createElement(m.b,{to:\"/probleme\"},\"Probleme\"))),o.a.createElement(d.a,{path:\"/:model\",children:this.Child})))}}]),e}(o.a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(o.a.createElement(v,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(t){t.unregister()})}},[[32,1,2]]]);","extractedComments":[]}