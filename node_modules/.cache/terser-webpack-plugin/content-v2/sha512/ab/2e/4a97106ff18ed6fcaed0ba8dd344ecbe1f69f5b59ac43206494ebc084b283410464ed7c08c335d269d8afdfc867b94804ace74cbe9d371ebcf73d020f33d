{"map":"{\"version\":3,\"sources\":[\"/Users/kevinteasdaledube/PhpstormProjects/reactphp/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/kevinteasdaledube/PhpstormProjects/reactphp/src/logo.svg\",\"/Users/kevinteasdaledube/PhpstormProjects/reactphp/src/App.js\",\"/Users/kevinteasdaledube/PhpstormProjects/reactphp/src/serviceWorker.js\",\"/Users/kevinteasdaledube/PhpstormProjects/reactphp/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"App\",\"_React$Component\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"test\",\"inherits\",\"createClass\",\"key\",\"value\",\"onCharge\",\"axios\",\"require\",\"data\",\"get\",\"then\",\"response\",\"console\",\"log\",\"toString\",\"setState\",\"bind\",\"catch\",\"error\",\"model\",\"react_default\",\"a\",\"createElement\",\"className\",\"src\",\"logo\",\"alt\",\"onClick\",\"changeText\",\"React\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6PCmEzBC,SA/Df,SAAAC,GACI,SAAAD,EAAYE,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACdG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,KAAM,IAHIR,EADtB,OAAAC,OAAAQ,EAAA,EAAAR,CAAAJ,EAAAC,GAAAG,OAAAS,EAAA,EAAAT,CAAAJ,EAAA,CAAA,CAAAc,IAAA,qBAAAC,MAAA,WASOT,KAAKU,aATZ,CAAAF,IAAA,WAAAC,MAAA,WAaM,IAAME,EAAQC,EAAQ,GAClBC,EAAO,GACXF,EAAMG,IAAI,UACLC,KAAK,SAAUC,GACZC,QAAQC,IAAIF,EAASH,MACrBA,EAAOG,EAASH,KAAKM,WACrBnB,KAAKoB,SAAS,CAACf,KAAMQ,KACvBQ,KAAKrB,OACNsB,MAAM,SAAUC,GAEbN,QAAQC,IAAIK,KACbR,KAAK,gBAxBlB,CAAAP,IAAA,aAAAC,MAAA,SA8Bae,GACP,IAAMb,EAAQC,EAAQ,GAClBC,EAAO,GACXF,EAAMG,IAAI,IAAKU,EAAML,YAChBJ,KAAK,SAAUC,GACZC,QAAQC,IAAIF,EAASH,MACrBA,EAAOG,EAASH,KAAKM,WACrBnB,KAAKoB,SAAS,CAACf,KAAMQ,KACvBQ,KAAKrB,OACNsB,MAAM,SAAUC,GAEbN,QAAQC,IAAIK,KACbR,KAAK,gBA1ClB,CAAAP,IAAA,SAAAC,MAAA,WAkDI,OACIgB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAKC,EAAAA,EAAMF,UAAU,WAAWG,IAAI,SACvCN,EAAAC,EAAAC,cAAA,SAAA,CAAQK,QAAShC,KAAKiC,WAAW,YAAYZ,KAAKrB,OAAlD,YACAyB,EAAAC,EAAAC,cAAA,SAAA,CAAQK,QAAShC,KAAKiC,WAAW,aAAaZ,KAAKrB,OAAnD,aACAyB,EAAAC,EAAAC,cAAA,IAAA,KAAI3B,KAAKI,MAAMC,YAxD7BX,EAAA,CAAyBwC,EAAAA,EAAMC,YCQXC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOjB,EAAAC,EAAAC,cAACgB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjC,KAAK,SAAAkC,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\n\\nexport class App extends React.Component {\\n    constructor(props){\\n        super(props);\\n        this.state = {\\n            test: \\\"\\\"\\n        }\\n    }\\n\\n    componentWillMount() {\\n       this.onCharge();\\n    }\\n\\n    onCharge(){\\n      const axios = require('axios');\\n      let data = \\\"\\\";\\n      axios.get('/test2')\\n          .then(function (response) {\\n              console.log(response.data);\\n              data = response.data.toString();\\n              this.setState({test: data});\\n          }.bind(this))\\n          .catch(function (error) {\\n              // handle error\\n              console.log(error);\\n          }).then(function () {\\n          // always executed\\n\\n      })\\n  }\\n\\n  changeText(model){\\n      const axios = require('axios');\\n      let data = \\\"\\\";\\n      axios.get('/'+ model.toString())\\n          .then(function (response) {\\n              console.log(response.data);\\n              data = response.data.toString();\\n              this.setState({test: data});\\n          }.bind(this))\\n          .catch(function (error) {\\n              // handle error\\n              console.log(error);\\n          }).then(function () {\\n          // always executed\\n\\n      })\\n  }\\n\\n\\n  render() {\\n    return (\\n        <div className=\\\"App\\\">\\n          <header className=\\\"App-header\\\">\\n            <img src={logo} className=\\\"App-logo\\\" alt=\\\"logo\\\"/>\\n              <button onClick={this.changeText(\\\"probleme\\\").bind(this)}>Probleme</button>\\n              <button onClick={this.changeText(\\\"evenement\\\").bind(this)}>Evenement</button>\\n              <p>{this.state.test}</p>\\n          </header>\\n        </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(t,e,n){t.exports=n.p+\"static/media/logo.5d5d9eef.svg\"},17:function(t,e,n){t.exports=n(44)},23:function(t,e,n){},24:function(t,e,n){},44:function(t,e,n){\"use strict\";n.r(e);var o=n(1),a=n.n(o),c=n(10),i=n.n(c),s=(n(23),n(11)),r=n(12),l=n(15),u=n(13),h=n(16),d=n(14),m=n.n(d),g=(n(24),function(t){function e(t){var n;return Object(s.a)(this,e),(n=Object(l.a)(this,Object(u.a)(e).call(this,t))).state={test:\"\"},n}return Object(h.a)(e,t),Object(r.a)(e,[{key:\"componentWillMount\",value:function(){this.onCharge()}},{key:\"onCharge\",value:function(){var t=n(4),e=\"\";t.get(\"/test2\").then(function(t){console.log(t.data),e=t.data.toString(),this.setState({test:e})}.bind(this)).catch(function(t){console.log(t)}).then(function(){})}},{key:\"changeText\",value:function(t){var e=n(4),o=\"\";e.get(\"/\"+t.toString()).then(function(t){console.log(t.data),o=t.data.toString(),this.setState({test:o})}.bind(this)).catch(function(t){console.log(t)}).then(function(){})}},{key:\"render\",value:function(){return a.a.createElement(\"div\",{className:\"App\"},a.a.createElement(\"header\",{className:\"App-header\"},a.a.createElement(\"img\",{src:m.a,className:\"App-logo\",alt:\"logo\"}),a.a.createElement(\"button\",{onClick:this.changeText(\"probleme\").bind(this)},\"Probleme\"),a.a.createElement(\"button\",{onClick:this.changeText(\"evenement\").bind(this)},\"Evenement\"),a.a.createElement(\"p\",null,this.state.test)))}}]),e}(a.a.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(a.a.createElement(g,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(t){t.unregister()})}},[[17,1,2]]]);","extractedComments":[]}